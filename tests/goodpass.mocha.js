// Generated by CoffeeScript 1.7.1
(function() {
  var blank, errorLength, errorLower, errorNumber, errorSymbol, errorUpper, expect, goodpass, valid;

  expect = require('chai').expect;

  goodpass = require('../goodpass.coffee');

  errorLength = 'Too short (must be 8 characters or more)';

  errorLower = 'Too short to not contain lowercase letter';

  errorUpper = 'Too short to not contain uppercase letter';

  errorNumber = 'Too short to not contain a number';

  errorSymbol = 'Too short to not contain a symbol';

  valid = 'Valid password';

  blank = 'Empty password';

  describe('goodpass', function() {
    return describe('passwords', function() {
      it('should not be valid if blank', function() {
        return expect(goodpass('')).to.eql([blank]);
      });
      it('should not be valid if fewer than 8 chars', function() {
        return expect(goodpass('abcdefg')).to.eql([errorLength]);
      });
      it('should not be valid if fewer than 12 chars with no lowercase letter', function() {
        return expect(goodpass('ABCDEFGH1*')).to.eql([errorLower]);
      });
      it('should not be valid if fewer than 12 chars with no uppercase letter', function() {
        return expect(goodpass('abcdefgh1*')).to.eql([errorUpper]);
      });
      it('should not be valid if fewer than 12 chars with no number', function() {
        return expect(goodpass('abcdefgH*')).to.eql([errorNumber]);
      });
      it('should not be valid if fewer than 12 chars with no symbol', function() {
        return expect(goodpass('abcdefgH1')).to.eql([errorSymbol]);
      });
      it('should not be valid if fewer than 16 chars with no lowercase letter', function() {
        return expect(goodpass('ABCDEFGHIJKL1*')).to.eql([errorLower]);
      });
      it('should not be valid if fewer than 16 chars with no uppercase letter', function() {
        return expect(goodpass('abcdefghijkl1*')).to.eql([errorUpper]);
      });
      it('should not be valid if fewer than 16 chars with no number', function() {
        return expect(goodpass('abcdefghijkL*')).to.eql([errorNumber]);
      });
      it('should not be valid if fewer than 20 chars with no lowercase letter', function() {
        return expect(goodpass('ABCDEFGHIJKL12345')).to.eql([errorLower]);
      });
      it('should not be valid if fewer than 20 chars with no uppercase letter', function() {
        return expect(goodpass('abcdefghijkl12345')).to.eql([errorUpper]);
      });
      it('should be valid if 8+ chars with symbols, mixed case letters, and numbers', function() {
        return expect(goodpass('abcdefgH1*')).to.eql([valid]);
      });
      it('should be valid if 12+ chars with mixed case letters, and numbers', function() {
        return expect(goodpass('abcdefghijK1')).to.eql([valid]);
      });
      it('should be valid if 16+ chars with mixed case letters', function() {
        return expect(goodpass('abcdefghijklmnoP')).to.eql([valid]);
      });
      return it('should be valid if 20+ chars', function() {
        return expect(goodpass('abcdefghijklmnopqrst')).to.eql([valid]);
      });
    });
  });

}).call(this);
