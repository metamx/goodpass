// Generated by CoffeeScript 1.7.1
(function() {
  var errorLength, errorLower, errorNumber, errorSymbol, errorUpper, goodpass, prefix;

  prefix = 'Too short to not contain';

  errorLength = function(n) {
    return "Too short (must be " + n + " characters or more)";
  };

  errorUpper = function(n) {
    return "" + prefix + " uppercase letter (must be " + n + " characters or more)";
  };

  errorLower = function(n) {
    return "" + prefix + " lowercase letter (must be " + n + " characters or more)";
  };

  errorNumber = function(n) {
    return "" + prefix + " number (must be " + n + " characters or more)";
  };

  errorSymbol = function(n) {
    return "" + prefix + " symbol (must be " + n + " characters or more)";
  };

  goodpass = function(password) {
    var hasNoLower, hasNoNumber, hasNoSymbol, hasNoUpper, msgs, symbolRegex;
    if (!password) {
      return ['Empty password'];
    }
    msgs = [];
    symbolRegex = /[-!$%^&*()_+|~=`{}\[\]:";'<>?,.\/]/g;
    hasNoSymbol = !symbolRegex.test(password);
    hasNoNumber = !/[0-9]/g.test(password);
    hasNoUpper = !/[A-Z]/g.test(password);
    hasNoLower = !/[a-z]/g.test(password);
    if (password.length < 8) {
      msgs.push(errorLength(8));
    } else if (password.length < 12) {
      if (hasNoSymbol) {
        msgs.push(errorSymbol(12));
      }
      if (hasNoNumber) {
        msgs.push(errorNumber(16));
      }
      if (hasNoUpper) {
        msgs.push(errorUpper(20));
      }
      if (hasNoLower) {
        msgs.push(errorLower(20));
      }
    } else if (password.length < 16) {
      if (hasNoNumber) {
        msgs.push(errorNumber(16));
      }
      if (hasNoUpper) {
        msgs.push(errorUpper(20));
      }
      if (hasNoLower) {
        msgs.push(errorLower(20));
      }
    } else if (password.length < 20) {
      if (hasNoUpper) {
        msgs.push(errorUpper(20));
      }
      if (hasNoLower) {
        msgs.push(errorLower(20));
      }
    }
    return msgs;
  };

  module.exports = goodpass;

}).call(this);
